}
}
#See how much excess we should manufacture in each period
V_mat = data.frame(V)
names(V_mat) = c('t1','t2','t3','t4')
rownames(V_mat) = c('Carry Over 0:','Carry Over 100:','Carry Over 200:','Carry Over 300:','Carry Over 400:','Carry Over 500:','Carry Over 600:','Carry Over 700:','Carry Over 800:','Carry Over 900:')
U_mat = data.frame((U-1) * 100)
names(U_mat) = c('t1','t2','t3','t4')
rownames(U_mat) = c('Carry Over 0:','Carry Over 100:','Carry Over 200:','Carry Over 300:','Carry Over 400:','Carry Over 500:','Carry Over 600:','Carry Over 700:','Carry Over 800:','Carry Over 900:')
V_mat
U_mat
e = seq(0,1000,by=100) # Excess watches carried over
n_excess = 10 # Only allow up to 1000 watches to carry over (since total demand < 1000)
t = c(1,2,3,4) # Time Periods
demand = c(200,300,300) # Demand of watches in each month
cost = c(100,100,120) # Cost to MFG in each month
V = matrix(NA, length(e)-1, length(t))
U = matrix(NA, length(e)-1, length(t))
V[,4] = 0
for(ti in (length(t)-1):1){
for(ei in 1:n_excess){
if(e[ei] >= demand[ti]){
min_mfg = 0
} else {
min_mfg = demand[ti] - e[ei]
}
xi = seq(min_mfg,1000-e[ei],by=100) # Decision of how much to MFG in this month
valueChoices = cost[ti] * xi + 15 * (xi + e[ei] - demand[ti]) + ((xi > 0) * 2500) + V[match(xi + e[ei] - demand[ti],e), ti+1]
V[ei,ti] = min(valueChoices)
U[ei,ti] = which.min(valueChoices)
}
}
#See how much excess we should manufacture in each period
V_mat = data.frame(V)
names(V_mat) = c('t1','t2','t3','t4')
rownames(V_mat) = c('Carry Over 0:','Carry Over 100:','Carry Over 200:','Carry Over 300:','Carry Over 400:','Carry Over 500:','Carry Over 600:','Carry Over 700:','Carry Over 800:','Carry Over 900:')
U_mat = data.frame((U-1) * 100)
names(U_mat) = c('t1','t2','t3','t4')
rownames(U_mat) = c('Carry Over 0:','Carry Over 100:','Carry Over 200:','Carry Over 300:','Carry Over 400:','Carry Over 500:','Carry Over 600:','Carry Over 700:','Carry Over 800:','Carry Over 900:')
U_mat
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/VUFile.Rdata")
U
shiny::runApp('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp')
shiny::runApp('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Dynamic Programming/coinGameApp/coinGameApp')
shiny::runApp('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Dynamic Programming/coinGameApp/coinGameApp')
setwd("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Dynamic Programming/coinGameApp/coinGameApp")
shiny::runApp()
shiny::runApp()
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Dynamic Programming/coinGameApp/coinGameApp/coinGame.R', echo=TRUE)
shiny::runApp()
shiny::runApp()
array(0, dim=c(100,12,12))
V = array(NA, dim=c(100,12,12))
V
V[1,1,1]
goal = 20
V = array(NA, dim=c(goal+6,goal+6,50))
V
U = array(NA, dim=c(goal+6,goal+6,50))
1:goal-1
V[100:106,,] = 1
V[goal:goal+1,,] = 1
V[goal:goal+6,,] = 1
V
V[goal,,]
V[goal:goal+6,,]
V[goal,1,1]
V[goal+1,1,1]
goal
goal:goal+6
seq(goal,goal+6)
V[seq(goal,goal+6),,] = 1
V[goal,1,1]
1:(goal-1)
V[goal-1,seq(1,goal-1),] = 1
V
V[seq(1,goal-1),seq(goal,goal+6),] = 0
V
goal-1
(goal-2):1
(goal-1):1
max_acc_points = goal                               # Max points allowed to accumulate in a turn
goal = 20
exp = 4                                             # The expected value of the opponent's turn
V = array(NA, dim=c(goal,goal,goal))  # s,p,x
U = array(NA, dim=c(goal,goal,goal))  # s,p,x
# Initialize boundaries
V[goal,,] = 1           # If you have 100+ points then you win irregardless of the opponent's score
V[goal-1,seq(1,goal-1),] = 1        # If it is your turn and you have goal-1 points, no matter what you will win
V[seq(1,goal-1),goal,] = 0 # If the opponent reaches the goal first then you lose.
V
V[,seq(1,goal-1),goal] = 1
V
goal = 20
exp = 4                                             # The expected value of the opponent's turn
V = array(NA, dim=c(goal,goal,goal))  # s,p,x
U = array(NA, dim=c(goal,goal,goal))  # s,p,x
# Initialize boundaries
V[goal,,] = 1                 # If you have 100+ points then you win irregardless of the opponent's score
V[goal-1,seq(1,goal-1),] = 1  # If it is your turn and you have goal-1 points, no matter what you will win
V[seq(1,goal-1),goal,] = 0    # If the opponent reaches the goal first then you lose.
V[,seq(1,goal-1),goal] = 1    # If you accumulate the goal amount in one round you will win
# Fill in remaining V and U matrix
for(s in (goal-2):1){
for(p in (goal-1):1){
for(x in (goal-1):1){
V[s,p,x] = max( (1/6)*V[s+1,p+exp,0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)], V[min(s+x,goal),p+exp,0] ) #Roll/Hold
}
}
}
#############################
## Author: Bejan Sadeghian ##
## Purpose: Project 5      ##
## Date: 5/6/2016          ##
#############################
goal = 20
exp = 4                                             # The expected value of the opponent's turn
V = array(NA, dim=c(goal,goal,goal))  # s,p,x
U = array(NA, dim=c(goal,goal,goal))  # s,p,x
# Initialize boundaries
V[goal,,] = 1                 # If you have 100+ points then you win irregardless of the opponent's score
V[goal-1,seq(1,goal-1),] = 1  # If it is your turn and you have goal-1 points, no matter what you will win
V[seq(1,goal-1),goal,] = 0    # If the opponent reaches the goal first then you lose.
V[,seq(1,goal-1),goal] = 1    # If you accumulate the goal amount in one round you will win
# Fill in remaining V and U matrix
for(s in (goal-2):1){
for(p in (goal-1):1){
for(x in (goal-1):1){
V[s,p,x] = max( (1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)], V[min(s+x,goal),min(p+exp,goal),0] ) #Roll/Hold
}
}
}
warnings()
V
S=goal-2
p=goal-1
x=goal-1
V[s+1,min(p+exp,goal),0]
V[min(s+x+2,goal),p,min(x+2,goal)]
s
s=goal-1
s=goal-2
V[s+1,min(p+exp,goal),0]
s
V[19,,]
p
V[19,20,0]
V[19,20,]
(1/6)*V[min(s+x+2,goal),p,min(x+2,goal)]
(1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
V[min(s+x+5,goal),p,min(x+5,goal)
V[min(s+x+5,goal),p,min(x+5,goal)]
V[min(s+x+5,goal),p,min(x+5,goal)]
V[min(s+x+4,goal),p,min(x+4,goal)]
V[min(s+x+6,goal),p,min(x+6,goal)]
V[min(s+x,goal),min(p+exp,goal),0]
max( (1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)], V[min(s+x,goal),min(p+exp,goal),0] )
(1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)]
(1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
max( ( (1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)] ), V[min(s+x,goal),min(p+exp,goal),0] )
( (1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)] ), V[min(s+x,goal)
( (1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)] )
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
(1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
(1/6)*V[min(s+x+6,goal),p,min(x+6,goal)]
(1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
(1/6)*V[min(s+x+2,goal),p,min(x+2,goal)]
(1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
(1/6)*V[s+1,min(p+exp,goal),0]
(1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
(1/6)*V[s+1,min(p+exp,goal),0]
(1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)]
V[s+1,min(p+exp,goal),0]
((1/6)*V[s+1,min(p+exp,goal),0]) + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
V[s+1,min(p+exp,goal),0]
(1/6)*V[s+1,min(p+exp,goal),0]
(1/6)*V[min(s+x+2,goal),p,min(x+2,goal)]
(1/6)*V[s+1,min(p+exp,goal),0] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)]
s=0
s
s=goal-2
V[min(s+x,goal),min(p+exp,goal),0]
x=goal
x=goal-1
( (1/6)*V[s+1,min(p+exp,goal),1] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)] )
V[min(s+x,goal),min(p+exp,goal),1]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
V[,,1]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
( (1/6)*V[s+1,min(p+exp,goal),1] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)] )
V[min(s+x,goal),min(p+exp,goal),1]
which.max( ( (1/6)*V[s+1,min(p+exp,goal),1] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)] ), V[min(s+x,goal),min(p+exp,goal),1] )
which.max( c( ( (1/6)*V[s+1,min(p+exp,goal),1] + (1/6)*V[min(s+x+2,goal),p,min(x+2,goal)] + (1/6)*V[min(s+x+3,goal),p,min(x+3,goal)]
+ (1/6)*V[min(s+x+4,goal),p,min(x+4,goal)] + (1/6)*V[min(s+x+5,goal),p,min(x+5,goal)]
+ (1/6)*V[min(s+x+6,goal),p,min(x+6,goal)] ), V[min(s+x,goal),min(p+exp,goal),1] ) ) #Roll/Hold
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
U
U[,,1]
U[,,5]
U[,,10]
U[10,8,1]
U[10,8,]
seq(1,goal-1)
V[,seq(1,goal-1),goal+1] = 1    # If you accumulate the goal amount in one round you will win
U[10,8,]
U[18,18,]
U[18,11,]
U[18,1,]
U[18,18,]
U[17,18,]
U[17,16,]
U[17,1,]
U[17,11,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
U
U[,,1]
U[,,5]
U[,,10]
U[,,13]
U[13,8,]
U[,,6]
U[,,11]
U[,,12]
U[,,13]
U[12,,]
U[12,8,]
U[18,18,]
U[18,1,]
U[18,10,]
U[18,12,]
U[18,16,]
U[18,15,]
U[18,19,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
U
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
U
U[,,100]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
U
U[1,1,]
V[1,1,]
V[1,10,]
V[1,19,]
U[1,10 ,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
V[1,10,]
V[1,19,]
V[1,1,]
V[,,goal]
V[,,goal-1]
V[,,goal-10]
V[19,19,]
V[20,20,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
V[1,1,]
V[1,10,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[50,50,]
V[1,1,]
V[1,98,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
V[50,50,]
V[70,70,]
V[79,79,]
V[75,75,]
V[75,96,]
V[96,50,]
V[96,96,]
V[97,97,]
V[79,79,]
V[80,80,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
V
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
V[1,1,100]
V[1,1,101]
V[1,1,102]
V[50,50,]
V[90,90,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
V[,,1]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[,,1]
V[1,1,]
goal
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
V[1,1,20]
V
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
?axpand
?expand
?combn
combn(seq(20),seq(20))
combn(vector(seq(20)),vector(seq(20)))
?expand.grid
expand.grid(seq(20),seq(20))
goal = 20+1
all_comb = expand.grid(seq(goal),seq(goal))
all_comb
all_comb$sum = all_comb[[1]] + all_comb[[2]]
all_comb
?order
all_comb[order(sum),]
all_comb[order(all_comb$sum),]
all_comb = all_comb[order(all_comb$sum, decreasing = TRUE),]
all_comb
all_comb = expand.grid(seq(goal-2),seq(goal-1))     # Generate all combinations of each index
all_comb$sum = all_comb[[1]] + all_comb[[2]]    # Find max sum
all_comb = all_comb[order(all_comb$sum, decreasing = TRUE),]
all_comb
seq(goal-2)
seq(goal-1)
all_comb = expand.grid(seq(goal-2),seq(goal-1))     # Generate all combinations of each index
all_comb
all_comb$sum = all_comb[[1]] + all_comb[[2]]    # Find max sum
all_comb = all_comb[order(all_comb$sum, decreasing = TRUE),]
all_comb
length(all_comb$sum)
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
U[1,1,]
which.max(U[1,1,])
which.max(V[1,1,])
V[1,1,]
V[50,50,]
save(list = c('V','U'),file = 'VUfile.Rdata')
save(list = c('V','U'),file = 'VUfile.Rdata')
get.wd()
setwd("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5")
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/Project 4.R', echo=TRUE)
shiny::runApp('gameApp/gameApp')
U[33,4,]
which.max(U[33,4,])
V[goal:goal+5,,]
V = array(NA, dim=c(goal+5,goal+5,goal+5))  # s,p,x
U = array(NA, dim=c(goal+5,goal+5,goal+5))  # s,p,x
V[goal:goal+5,,] = 1                 # If you have 100+ points then you win irregardless of the opponent's score
V[goal:goal+5,,]
V
V[101,,]
V[goal:(goal+5),,] = 1                 # If you have 100+ points then you win irregardless of the opponent's score
V[101,,]
V[goal:(goal+5),,] = 1
V[goal:(goal+5),,]
goal
goal:(goal+5)
V[105,,]
V[1,,]
V[goal:(goal+5),,] = 1                 # If you have 100+ points then you win irregardless of the opponent's score
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameStrategy.R', echo=TRUE)
UV[1,1,]
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameStrategy.R', echo=TRUE)
gameStrategy(20)
U
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/VUfile.Rdata")
V[1,1,]
gameStrategy(100)
getwd()
shiny::runApp('gameApp/gameApp')
uTurn
k
r
V[1,1,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameStrategy.R', echo=TRUE)
gameStrategy(100)
shiny::runApp('gameApp/gameApp')
r
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/gameStrategy_Bonus.R', echo=TRUE)
gameStrategy(20)
gameStrategy(20,c(1/2,.1,.1,.1,.1,.1))
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/VUfile.Rdata")
U[1,1,]
U[1,10,]
U[115,10,]
U[15,10,]
p_dist
p=c(1/2,.1,.1,.1,.1,.1)
sum(c(1/2,.1,.1,.1,.1,.1))
p[1]
p[2]
gameStrategy(20)
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/VUfile.Rdata")
U[1,1,]
U[15,10,]
V[1,1,]
U[1,1,]
U[10,15,]
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/gameStrategy_Bonus.R', echo=TRUE)
gameStrategy(20)
getwd()
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/gameStrategy_Bonus.R', echo=TRUE)
gameStrategy(20)
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/VUfile.Rdata")
U[1,1,]
gameStrategy(20,c(1/2,.1,.1,.1,.1,.1))
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/VUfile.Rdata")
U[1,1,]
source("gameStrategy_Bonus.R")
source("gameStrategy_Bonus.R")
load("gameStrategy_Bonus.R")
getwd()
setwd("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp")
load("gameStrategy_Bonus.R")
source("gameStrategy_Bonus.R")
is.null(c())
not(is.null(c()))
!(is.null(c()))
dice_list
!(is.null(dice_list))
shiny::runApp()
dice = []
dice_dist = c()
shiny::runApp()
shiny::runApp()
shiny::runApp()
for(i in seq(3)){print(i)}
dice_dist
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
dice_list
shiny::runApp()
shiny::runApp()
shiny::runApp()
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/VUfile.Rdata")
U[1,1,]
print(dice_dist)
shiny::runApp()
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/gameStrategy_Bonus.R', echo=TRUE)
shiny::runApp()
load("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/VUfile_bonus.Rdata")
U[1,1,]
U[1,20,]
U[50,20,]
shiny::runApp()
source('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/gameStrategy.R', echo=TRUE)
gameStrategy(100)
shiny::runApp()
library(shiny)
this.dir <- dirname(parent.frame(2)$ofile)
sys.frame(1)
sys.frame[1]
sys.frame(1)$ofile
shiny::runApp('bonus')
setwd("C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp/bonus")
shiny::runApp()
shiny::runApp('C:/Users/beins_000/Dropbox/Grad School/2015 Spring/Stochastic Control and Optimization/Assignment 7 - Post Project 5/gameApp/gameApp')
